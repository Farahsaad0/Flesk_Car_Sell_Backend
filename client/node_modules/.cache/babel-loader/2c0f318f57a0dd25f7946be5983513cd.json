{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farah\\\\Desktop\\\\auth\\\\client\\\\src\\\\components\\\\Singup\\\\verificationPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerificationPage = _ref => {\n  _s();\n\n  let {\n    Email,\n    onSuccess\n  } = _ref;\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [msg, setMsg] = useState(\"\");\n\n  const handleVerificationSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const url = \"http://localhost:8000/verify\";\n      const {\n        data: res\n      } = await axios.post(url, {\n        Email,\n        verificationCode\n      });\n      setMsg(res.message);\n      onSuccess(); // Appel à la fonction onSuccess pour signaler la réussite de la vérification\n    } catch (error) {\n      setError(\"Code de vérification invalide.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.signup_container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form_container,\n      onSubmit: handleVerificationSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"V\\xE9rification de l'email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Code de v\\xE9rification\",\n        name: \"verificationCode\",\n        onChange: e => setVerificationCode(e.target.value),\n        value: verificationCode,\n        required: true,\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.error_msg,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.success_msg,\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.green_btn,\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VerificationPage, \"lNe5bGoFz+2m/a4ww9u0ScvTlYQ=\");\n\n_c = VerificationPage;\nexport default VerificationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerificationPage\");","map":{"version":3,"sources":["C:/Users/farah/Desktop/auth/client/src/components/Singup/verificationPage.js"],"names":["React","useState","axios","styles","VerificationPage","Email","onSuccess","verificationCode","setVerificationCode","error","setError","msg","setMsg","handleVerificationSubmit","e","preventDefault","url","data","res","post","message","signup_container","form_container","target","value","input","error_msg","success_msg","green_btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,gBAAgB,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAyB;AACjD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMY,wBAAwB,GAAG,MAAOC,CAAP,IAAa;AAC5CA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,GAAG,GAAG,8BAAZ;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAgB,MAAMhB,KAAK,CAACiB,IAAN,CAAWH,GAAX,EAAgB;AAC1CX,QAAAA,KAD0C;AAE1CE,QAAAA;AAF0C,OAAhB,CAA5B;AAIAK,MAAAA,MAAM,CAACM,GAAG,CAACE,OAAL,CAAN;AACAd,MAAAA,SAAS,GAPP,CAOW;AACd,KARD,CAQE,OAAOG,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,gCAAD,CAAR;AACD;AACF,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACkB,gBAAvB;AAAA,2BACE;AACE,MAAA,SAAS,EAAElB,MAAM,CAACmB,cADpB;AAEE,MAAA,QAAQ,EAAET,wBAFZ;AAAA,8BAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,yBAFd;AAGE,QAAA,IAAI,EAAC,kBAHP;AAIE,QAAA,QAAQ,EAAGC,CAAD,IAAON,mBAAmB,CAACM,CAAC,CAACS,MAAF,CAASC,KAAV,CAJtC;AAKE,QAAA,KAAK,EAAEjB,gBALT;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,SAAS,EAAEJ,MAAM,CAACsB;AAPpB;AAAA;AAAA;AAAA;AAAA,cALF,EAcGhB,KAAK,iBAAI;AAAK,QAAA,SAAS,EAAEN,MAAM,CAACuB,SAAvB;AAAA,kBAAmCjB;AAAnC;AAAA;AAAA;AAAA;AAAA,cAdZ,EAeGE,GAAG,iBAAI;AAAK,QAAA,SAAS,EAAER,MAAM,CAACwB,WAAvB;AAAA,kBAAqChB;AAArC;AAAA;AAAA;AAAA;AAAA,cAfV,eAgBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAER,MAAM,CAACyB,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA5CD;;GAAMxB,gB;;KAAAA,gB;AA8CN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst VerificationPage = ({ Email, onSuccess }) => {\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const handleVerificationSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const url = \"http://localhost:8000/verify\";\r\n      const { data: res } = await axios.post(url, {\r\n        Email,\r\n        verificationCode,\r\n      });\r\n      setMsg(res.message);\r\n      onSuccess(); // Appel à la fonction onSuccess pour signaler la réussite de la vérification\r\n    } catch (error) {\r\n      setError(\"Code de vérification invalide.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.signup_container}>\r\n      <form\r\n        className={styles.form_container}\r\n        onSubmit={handleVerificationSubmit}\r\n      >\r\n        <h1>Vérification de l'email</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Code de vérification\"\r\n          name=\"verificationCode\"\r\n          onChange={(e) => setVerificationCode(e.target.value)}\r\n          value={verificationCode}\r\n          required\r\n          className={styles.input}\r\n        />\r\n        {error && <div className={styles.error_msg}>{error}</div>}\r\n        {msg && <div className={styles.success_msg}>{msg}</div>}\r\n        <button type=\"submit\" className={styles.green_btn}>\r\n          Valider\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationPage;\r\n"]},"metadata":{},"sourceType":"module"}